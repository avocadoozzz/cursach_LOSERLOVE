import React, { useState } from "react";
import { Button, TextField, ToggleButton, ToggleButtonGroup, MenuItem, Select, FormControl, InputLabel } from "@mui/material";
import { useNavigate } from "react-router-dom";
import { IconButton } from "@mui/material";
import "./services.css";
import langIcon from '../../assets/img/header/lang.png';
import razlogIcon from '../../assets/img/header/razlog.png';
import accountIcon from '../../assets/img/header/account.png';

const allServices = [
  { name: "–ê—Ä–µ–ª–æ–ª—ã", price: 10, duration: 5, category: "zones" },
  { name: "–ë–∞–∫–µ–Ω–±–∞—Ä–¥—ã", price: 10, duration: 5, category: "zones" },
  { name: "–ë–µ–¥—Ä–æ/–≥–æ–ª–µ–Ω—å", price: 30, duration: 20, category: "zones" },
  { name: "–ì–ª—É–±–æ–∫–æ–µ –±–∏–∫–∏–Ω–∏", price: 30, duration: 20, category: "zones" },
  { name: "–ì–ª—É–±–æ–∫–æ–µ –±–∏–∫–∏–Ω–∏ (–º—É–∂—Å–∫–æ–µ)", price: 45, duration: 25, category: "zones" },
  { name: "–ì—Ä—É–¥—å", price: 20, duration: 15, category: "zones" },
  { name: "–ñ–∏–≤–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é", price: 30, duration: 10, category: "zones" },
  { name: "–ì—Ä—É–¥—å –∏ –∂–∏–≤–æ—Ç", price: 50, duration: 30, category: "complexes" },
  { name: "–ó–∞–¥–Ω—è—è/–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å –±–µ–¥—Ä–∞", price: 20, duration: 20, category: "zones" },
  { name: "–ó–∞—Ç—ã–ª–æ–∫(–∫–∞–Ω—Ç–∏–∫)", price: 10, duration: 5, category: "zones" },
  { name: "–ë–µ–¥—Ä–æ/–≥–æ–ª–µ–Ω—å", price: 30, duration: 20, category: "zones" },
  { name: "–Ø–≥–æ–¥–∏—Ü—ã", price: 20, duration: 10, category: "zones" },
  { name: "–ì–ª—É–±–æ–∫–æ–µ –±–∏–∫–∏–Ω–∏ (–º—É–∂—Å–∫–æ–µ)", price: 45, duration: 25, category: "zones" },
  { name: "–í—Å–µ —Ç–µ–ª–æ", price: 160, duration: 120, category: "complexes" },
  { name: "–ö 1 (–ø–æ–¥–º—ã—à–∫–∏ + –≥–ª—É–±–æ–∫–æ–µ –±–∏–∫–∏–Ω–∏)", price: 40, duration: 25, category: "complexes" },
  { name: "–ö 1 –¥–ª—è –º—É–∂—á–∏–Ω ( –ø–æ–¥–º—ã—à–∫–∏-–≥–ª—É–±–æ–∫–æ–µ –±–∏–∫–∏–Ω–∏)", price: 55, duration: 35, category: "complexes" },
  { name: "–ö 12 (–ø–æ–¥–º—ã—à–∫–∏ + –≥–ª—É–±–æ–∫–æ–µ –±–∏–∫–∏–Ω–∏ + —Ä—É–∫–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é + –Ω–æ–≥–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é) ", price: 120, duration: 80, category: "complexes" },
  { name: "–ö 2 (–≥–ª—É–±–æ–∫–æ–µ –±–∏–∫–∏–Ω–∏ + –Ω–æ–≥–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é)", price: 80, duration: 45, category: "complexes" },
  { name: "–ö 7 (–ø–æ–¥–º—ã—à–∫–∏+ –≥–ª—É–±–æ–∫–æ–µ –±–∏–∫–∏–Ω–∏+ –ø–æ–ª–æ—Å–∫–∞ –∂–∏–≤–æ—Ç–∞)", price: 45, duration: 30, category: "complexes" },
];

const Services = () => {
  const [openModal, setOpenModal] = useState(false);
  const [openAccountModal, setOpenAccountModal] = useState(false);
  const [menuOpen, setMenuOpen] = useState(false); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –±—É—Ä–≥–µ—Ä-–º–µ–Ω—é
  const [category, setCategory] = useState("zones");
  const [searchTerm, setSearchTerm] = useState("");
  const [sortBy, setSortBy] = useState("");
  const [filterBy, setFilterBy] = useState("");
  const navigate = useNavigate();


  const handleToggleModal = () => {
    setOpenModal((prev) => !prev);
  };

  const handleToggleAccountModal = () => {
    setOpenAccountModal((prev) => !prev);
  };

  const handleAccountAction = (action) => {
    if (action === "register") {
      navigate("../register");
    } else if (action === "auth") {
      navigate("../auth");
    }
    setOpenAccountModal(false);
  };

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É
  const filteredServices = allServices.filter(service =>
    service.category === category &&
    service.name.toLowerCase().includes(searchTerm.toLowerCase())
  );

  // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
  const sortedServices = [...filteredServices].sort((a, b) => {
    if (sortBy === "price") return a.price - b.price;
    if (sortBy === "duration") return a.duration - b.duration;
    return 0;
  });

  // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞
  const finalServices = filterBy
    ? sortedServices.filter(service => service.name.toLowerCase().includes(filterBy.toLowerCase()))
    : sortedServices;

  return (
    <div className="header">
      <IconButton onClick={() => navigate(-1)} sx={{ position: "absolute", top: 10, left: 10, color: "white" }}>
        <span style={{ fontSize: "24px" }}>{"<"}</span>
      </IconButton>
      <h1 className="masters-title2">–í—ã–±–æ—Ä —É—Å–ª—É–≥</h1>
      <IconButton onClick={() => navigate(`/masters`)} sx={{ position: "absolute", top: 10, right: 10, color: "white", zIndex: 9999 }}>
  <span style={{ fontSize: "24px" }}>{">"}</span>
</IconButton>

 {/* –ë—É—Ä–≥–µ—Ä-–º–µ–Ω—é (–∫–Ω–æ–ø–∫–∞) */}
      <div className="burger-menu2">
          <IconButton onClick={() => setMenuOpen((prev) => !prev)} sx={{ color: "white" }}>
            <span className={`burger-icon2 ${menuOpen ? "close-icon2" : ""}`}>
            {menuOpen ? "‚úñ" : "‚ò∞"}</span>
          </IconButton>
        </div>
        {/* –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é (–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ menuOpen === true) */}
      {menuOpen && (
        <div className="nr-lang-menu2">
          <IconButton onClick={handleToggleModal} sx={{ color: "white" }}>
            <img src={langIcon} alt="Language" width="30" height="30" />
          </IconButton>

          <IconButton onClick={handleToggleModal} sx={{ color: "white" }}>
            <img src={razlogIcon} alt="Razlog" width="20" height="20" />
          </IconButton>

          <IconButton onClick={handleToggleAccountModal} sx={{ color: "white" }}>
            <img src={accountIcon} alt="Account" width="40" height="40" />
          </IconButton>

          {/* –ù–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ */}
          <div className="menu-button123">
          <button className="menu-button111" onClick={() => navigate("/services")}>–£—Å–ª—É–≥–∏</button>
          <button className="menu-button222" onClick={() => navigate("/masters")}>–ú–∞—Å—Ç–µ—Ä</button>
          <button className="menu-button333" onClick={() => navigate("/reviews")}>–û—Ç–∑—ã–≤—ã</button>
          </div>
        </div>
         )}
         {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ */}
      {openAccountModal && (
        <div className="account-modal">
          <button className="close-button1" onClick={handleToggleAccountModal}>
            &times;
          </button>
          <h3>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</h3>
          <button onClick={() => handleAccountAction("register")} className="account-modal1">–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
          <button onClick={() => handleAccountAction("auth")} className="account-modal2">–í–æ–π—Ç–∏</button>
        </div>
      )}


      <div className="services-container">
        <div className="search-section">
          <TextField
            className="search-bar"
            placeholder="üîç –ü–æ–∏—Å–∫"
            variant="outlined"
            fullWidth
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
          />
          <FormControl className="filter-select">
            <InputLabel>–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞</InputLabel>
            <Select value={sortBy} onChange={(e) => setSortBy(e.target.value)}>
              <MenuItem value="">–ë–µ–∑ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏</MenuItem>
              <MenuItem value="price">–ü–æ —Ü–µ–Ω–µ</MenuItem>
              <MenuItem value="duration">–ü–æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</MenuItem>
            </Select>
          </FormControl>
          <FormControl className="filter-select">
            <InputLabel>–§–∏–ª—å—Ç—Ä</InputLabel>
            <Select value={filterBy} onChange={(e) => setFilterBy(e.target.value)}>
              <MenuItem value="">–ë–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞</MenuItem>
              <MenuItem value="–≥—Ä—É–¥—å">–ì—Ä—É–¥—å</MenuItem>
              <MenuItem value="–±–∏–∫–∏–Ω–∏">–ë–∏–∫–∏–Ω–∏</MenuItem>
            </Select>
          </FormControl>
        </div>
        <div className="toggle-buttons1">
        <ToggleButtonGroup
          className="toggle-buttons"
          value={category}
          exclusive
          onChange={(_, newValue) => setCategory(newValue || category)}
        >
          <div className="zones">
          <ToggleButton value="zones">–ó–æ–Ω—ã –æ—Ç–¥–µ–ª—å–Ω–æ</ToggleButton>
          </div>
          <div className="complexes">
          <ToggleButton value="complexes">–ö–æ–º–ø–ª–µ–∫—Å—ã</ToggleButton>
          </div>
        </ToggleButtonGroup>
        </div>

        <h2 className="section-title">{category === "zones" ? "–ó–æ–Ω—ã –æ—Ç–¥–µ–ª—å–Ω–æ" : "–ö–æ–º–ø–ª–µ–∫—Å—ã"}</h2>

        <div className="service-list">
          {finalServices.length > 0 ? (
            finalServices.map((service, index) => (
              <div key={index} className="service-card">
                <div className="service-info">
                  <div className="service-name">{service.name}</div>
                  <div className="service-details">{service.price} BYN ‚Ä¢ {service.duration} –º</div>
                </div>
                <Button variant="contained" className="select-button1">–í—ã–±—Ä–∞—Ç—å</Button>
              </div>
            ))
          ) : (
            <p>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Å–ª—É–≥</p>
          )}
        </div>
      </div>
    </div>
  );
};

export default Services;
