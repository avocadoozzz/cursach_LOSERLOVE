import React, { useState } from "react";
import { Button, TextField, ToggleButton, ToggleButtonGroup, MenuItem, Select, FormControl, InputLabel } from "@mui/material";
import { useNavigate } from "react-router-dom";
import { IconButton } from "@mui/material";
import "./services.css";

const allServices = [
  { name: "–ê—Ä–µ–ª–æ–ª—ã", price: 10, duration: 5, category: "zones" },
  { name: "–ë–∞–∫–µ–Ω–±–∞—Ä–¥—ã", price: 10, duration: 5, category: "zones" },
  { name: "–ë–µ–¥—Ä–æ/–≥–æ–ª–µ–Ω—å", price: 30, duration: 20, category: "zones" },
  { name: "–ì–ª—É–±–æ–∫–æ–µ –±–∏–∫–∏–Ω–∏", price: 30, duration: 20, category: "zones" },
  { name: "–ì–ª—É–±–æ–∫–æ–µ –±–∏–∫–∏–Ω–∏ (–º—É–∂—Å–∫–æ–µ)", price: 45, duration: 25, category: "zones" },
  { name: "–ì—Ä—É–¥—å", price: 20, duration: 15, category: "zones" },
  { name: "–ñ–∏–≤–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é", price: 30, duration: 10, category: "zones" },
  { name: "–ì—Ä—É–¥—å –∏ –∂–∏–≤–æ—Ç", price: 50, duration: 30, category: "complexes" },
];

const Services = () => {
  const [category, setCategory] = useState("zones");
  const [searchTerm, setSearchTerm] = useState("");
  const [sortBy, setSortBy] = useState("");
  const [filterBy, setFilterBy] = useState("");
  const navigate = useNavigate();

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É
  const filteredServices = allServices.filter(service =>
    service.category === category &&
    service.name.toLowerCase().includes(searchTerm.toLowerCase())
  );

  // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
  const sortedServices = [...filteredServices].sort((a, b) => {
    if (sortBy === "price") return a.price - b.price;
    if (sortBy === "duration") return a.duration - b.duration;
    return 0;
  });

  // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞
  const finalServices = filterBy
    ? sortedServices.filter(service => service.name.toLowerCase().includes(filterBy.toLowerCase()))
    : sortedServices;

  return (
    <div className="header">
      <IconButton onClick={() => navigate(-1)} sx={{ position: "absolute", top: 10, left: 10, color: "white" }}>
        <span style={{ fontSize: "24px" }}>{"<"}</span>
      </IconButton>
      <h1 className="masters-title1">–í—ã–±–æ—Ä —É—Å–ª—É–≥</h1>

      <div className="services-container">
        <div className="search-section">
          <TextField
            className="search-bar"
            placeholder="üîç –ü–æ–∏—Å–∫"
            variant="outlined"
            fullWidth
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
          />
          <FormControl className="filter-select">
            <InputLabel>–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞</InputLabel>
            <Select value={sortBy} onChange={(e) => setSortBy(e.target.value)}>
              <MenuItem value="">–ë–µ–∑ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏</MenuItem>
              <MenuItem value="price">–ü–æ —Ü–µ–Ω–µ</MenuItem>
              <MenuItem value="duration">–ü–æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</MenuItem>
            </Select>
          </FormControl>
          <FormControl className="filter-select">
            <InputLabel>–§–∏–ª—å—Ç—Ä</InputLabel>
            <Select value={filterBy} onChange={(e) => setFilterBy(e.target.value)}>
              <MenuItem value="">–ë–µ–∑ —Ñ–∏–ª—å—Ç—Ä–∞</MenuItem>
              <MenuItem value="–≥—Ä—É–¥—å">–ì—Ä—É–¥—å</MenuItem>
              <MenuItem value="–±–∏–∫–∏–Ω–∏">–ë–∏–∫–∏–Ω–∏</MenuItem>
            </Select>
          </FormControl>
        </div>

        <ToggleButtonGroup
          className="toggle-buttons"
          value={category}
          exclusive
          onChange={(_, newValue) => setCategory(newValue || category)}
        >
          <div className="zones">
          <ToggleButton value="zones">–ó–æ–Ω—ã –æ—Ç–¥–µ–ª—å–Ω–æ</ToggleButton>
          </div>
          <div className="complexes">
          <ToggleButton value="complexes">–ö–æ–º–ø–ª–µ–∫—Å—ã</ToggleButton>
          </div>
        </ToggleButtonGroup>

        <h2 className="section-title">{category === "zones" ? "–ó–æ–Ω—ã –æ—Ç–¥–µ–ª—å–Ω–æ" : "–ö–æ–º–ø–ª–µ–∫—Å—ã"}</h2>

        <div className="service-list">
          {finalServices.length > 0 ? (
            finalServices.map((service, index) => (
              <div key={index} className="service-card">
                <div className="service-info">
                  <div className="service-name">{service.name}</div>
                  <div className="service-details">{service.price} BYN ‚Ä¢ {service.duration} –º</div>
                </div>
                <Button variant="contained" className="select-button">–í—ã–±—Ä–∞—Ç—å</Button>
              </div>
            ))
          ) : (
            <p>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Å–ª—É–≥</p>
          )}
        </div>
      </div>
    </div>
  );
};

export default Services;
